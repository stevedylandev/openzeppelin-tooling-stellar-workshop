---
# Ports `8081` for metrics server.

services:
  monitor:
    image: openzeppelin/openzeppelin-monitor:latest
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile.development}
    environment:
      METRICS_PORT: ${METRICS_PORT:-8081}
      METRICS_ENABLED: ${METRICS_ENABLED:-false}
      # Options: trace, debug, info, warn, error
      # Default: info
      LOG_LEVEL: ${RUST_LOG:-info}
      # Options: stdout, file
      # Default: stdout
      LOG_MODE: ${LOG_MODE:-stdout}
      # Only used if LOG_MODE is file
      # Default: 1GB (1073741824 bytes)
      LOG_MAX_SIZE: ${LOG_MAX_SIZE:-1073741824}
      IN_DOCKER: 'true'
    restart: on-failure:5
    mem_swappiness: 0
    security_opt:
      - no-new-privileges
    volumes:
      - ./config:/app/config/:ro
      - ${MONITOR_DATA_DIR:-/dev/null}:/app/data
      - ${LOG_DATA_DIR:-./logs}:/app/logs
    networks:
      - monitor-network
      - metrics-network

  prometheus:
    image: prom/prometheus:v3.1.0
    security_opt:
      - no-new-privileges
    command: --log.level=warn --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
      --storage.tsdb.retention.time=30d
    ports:
      - 9090:9090/tcp
    networks:
      - metrics-network
      - monitor-network
    volumes:
      - ./cmd/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: on-failure:5
    profiles:
      - metrics

  grafana:
    image: grafana/grafana:11.5.1
    security_opt:
      - no-new-privileges
    ports: [3000:3000/tcp]
    networks:
      - metrics-network
      - monitor-network
    volumes:
      - ./cmd/prometheus/grafana.ini:/etc/grafana/grafana.ini
      - ./cmd/prometheus/datasources:/etc/grafana/provisioning/datasources
      - ./cmd/prometheus/dashboards:/etc/grafana/provisioning/dashboards
    restart: on-failure:5
    profiles:
      - metrics

networks:
  metrics-network:
    internal: true
  monitor-network:
    driver: bridge
